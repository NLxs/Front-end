/** variables **/
$page-bg: #607d8b;
$base-font-size: 16px; // becomes 1rem
$menu-silver: #eee;
$menu-border: #dedede;
$menu-focused: #1e88e5;
$menu-separator: #ccc;
$menu-text-color: #333;
$menu-shortcut-color: #999;
$menu-focused-text-color: #fff;
$menu-text-color-disabled: #999;
$menu-border-width: 1px;
$menu-shadow: 2px 2px 3px -3px $menu-text-color;
$menu-content-padding: 0.5rem 1rem 0.5rem 1.75rem;
$menu-border-radius: 0.5rem;
$menu-top-padding: 0.25rem;

/** styles **/
/* commons */
html {
  font-size: $base-font-size;
}

body {
  margin: 0;
  padding: 0;
  font-family: sans-serif;
  font-size: $base-font-size;
  background-color: $page-bg;
}

/* nav-bar styling */
.flyout-nav {
  ul {
    margin: 0;
    padding: 0;
    position: absolute;
    display: none;
    list-style-type: none;
    white-space: nowrap;
    background: $menu-silver;
    border: $menu-border-width solid $menu-border;
    box-shadow: $menu-shadow;
  }

  li {
    position: relative;
    display: block;

      // separator item
    &.separator {
      margin-bottom: $menu-top-padding;
      border-bottom: $menu-border-width solid $menu-separator;
      padding-bottom: $menu-top-padding;
    }
    a {
      text-decoration: none;
      color: $menu-text-color;
      position: relative;
      display: table;
      width: 100%;

      .label,
      .shortcut {
        display: table-cell;
        padding: $menu-content-padding;
      }

      .shortcut {
        text-align: right;
        color: $menu-shortcut-color;
      }

      label {
        cursor: pointer;
      }

      input[type='checkbox'] {
        display: none;
      }

      input[type='checkbox']:checked + .label {
        &:before {
          content: '✔️';
          position: absolute;
          top: 0;
          left: 0.25rem;
          padding: 0.25rem;
        }
      }

      &:hover {
        background: $menu-focused;
        .label,
        .shortcut {
            color: $menu-focused-text-color;
        }
      }
    }

    &.has-children > a {
      margin-right: 2.5rem;
      &:after {
        content: '▶';
        text-align: right;
        position: absolute;
        right: 0;
        padding: $menu-content-padding;
      }
    }

    // don't let disabled options be hover-able/clickable and color them different
    &.disabled {
      .label,
      .shortcut {
        color: $menu-text-color-disabled;
      }
      pointer-events: none;
    }

    // show the next level drop-down on the right at the same height
    &:hover {
      & > ul {
        display: block;
        top: -$menu-border-width; // handle the offset caused by border
        left: 100%;
      }
    }
  }

    // overrides for first-level behaviour (bar)
  & > ul {
    display: flex;
    flex-flow: row nowrap;
    justify-content: flex-start;
    align-items: stretch;
    width: 100%;
    border-bottom: $menu-border-width solid $menu-border;
    box-shadow: $menu-shadow;
    padding: 0;

    // override the bar to not have too much skewed left spacing
    // (required for later ones to fit in checkboxes)
    & > li > a > .label {
        padding-left: 1rem;
    }

    // first-level drop-down should appear below at the same left position
    & > li:hover > ul {
      top: 100%;
      left: -$menu-border-width; // handle the offset caused by border
    }
  }
}
